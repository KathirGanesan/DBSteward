What does DBSteward do?

DBSteward is a database definition differencing tool. Database structure and data is defined in a DTD-enforced, human readable XML format.

DBSteward XML definition files can be included and composited by other DBSteward XML definition files to provide a means to overlay installation specific database structure and static data definitions.

DBSteward has 2 main output products of this XML definition: - Complete DDL - output a 'full' database definition SQL DDL file that can be used to create a complete database based on the XML definition. - Upgrade DDL - output a SQL DDL upgrade file which can be used to upgrade an existing database created with the first XML definition file passed to the second.

DBSteward creates an upgrade script as the result of comparing two XML definition sets - upgrade file creation does not require target database connectivity.

DBSteward is also capable of reading standard Postgresql pg_dump files or slurping a running Postgresql database and outputting a matching XML definition file.


What SQL RDMS output formats does DBSteward currently support?

DBSteward currently supports output files in Postgresql 8 / 9, and Microsoft SQL Server 2005 / 2008 compliant SQL DDL. DBSteward was written with an extensible mindset, to allow for additional SQL flavors to be supported rapidly.


Why use DBSteward to maintain database structure?

Maintaining database structure with DBSteward allows developers to make large or small changes and immediately be able to test a fresh database deployment against revised code. The updated definition is then also immediately useful to upgrade an older version to the current one. Being able to generate DDL changes can greatly simplify and speed up database upgrade testing and deployment. At any point during a development cycle, a DBA can generate database definition changes instead of having to maintain complex upgrade scripts or hunt for developers who made a database change.


Who should use DBSteward?

Intended end users are application developers and database administrators who maintain database strucure changes as part of an application life cycle. Maintaining your SQL database in a DBSteward XML definition can greatly lower your release engineering costs by removing the need to write and test SQL DDL changes. Many developers maintain complete and upgrade script versions of their application databases. Upgrade headaches or data loss are reduced by only requiring a developer to maintain a complete definition file. Creating an upgrade from version A to B becomes a compile task, where you ask DBSteward to generate DDL changes by providing it the version A and B complete definition files. 

